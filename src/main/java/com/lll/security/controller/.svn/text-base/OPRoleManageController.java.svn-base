package com.sitech.security.controller;

import java.sql.Date;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.sitech.function.entity.OPFunction;
import com.sitech.function.service.IMenuManageService;
import com.sitech.security.entity.OPRole;
import com.sitech.security.entity.OPRoleFunc;
import com.sitech.security.entity.OperatorDetails;
import com.sitech.security.service.IOPRoleFuncService;
import com.sitech.security.service.IOPRoleManageService;
import com.sitech.sysLogManage.service.Impl.SysLogService;
import com.sitech.util.HallException;
import com.sitech.util.SpringSecurityUtils;
import com.sitech.util.orm.MyBatisPage;


@Controller
@RequestMapping("/OPRoleManageAction")
public class OPRoleManageController {
	
	@Autowired 
	private IOPRoleManageService opRoleManageService;
	@Autowired
	private IMenuManageService menuManageService;
	@Autowired
	private IOPRoleFuncService opRoleFuncService;
	@Autowired
	private SysLogService sysLogService;
	
	   /**
	 * 跳转到角色创建页面createRole.jsp
	 * @return
	 */
	
    @RequestMapping(value = "/accessAddOPRole")
    public String roleManage(Model model) {
        OperatorDetails operator = SpringSecurityUtils.getCurrentUser();
        if (operator == null) {
            return "util/error";
        }
    	model.addAttribute("operator", operator);
        return "loginManage/createRole";
    }
    
    /**
     * 跳转至角色管理页面 roleManage.jsp
     */
    @RequestMapping(value = "/opRoleManage")
    public String opRoleManage(
    		@ModelAttribute("page") MyBatisPage page,
    		Model model){
    	OperatorDetails operator = SpringSecurityUtils.getCurrentUser();
        if (operator == null) {
            return "util/error";
        }
        Map<String, Object> conditions = new HashMap<String, Object>();
        List<OPRole> opRoles = opRoleManageService.pageListOPRole(page, conditions);
        model.addAttribute("opRoles", opRoles);
        return "loginManage/roleManage";
    }
    
    /**
     * 下一步 跳转到绑定选择界面
     */
    @RequestMapping(value = "/selectMenu")
    public String jumpToSelectMenu(
    		@ModelAttribute("opRole") OPRole opRole,
    		@ModelAttribute("page") MyBatisPage page,
    		Model model
    ){
    	OperatorDetails operator = SpringSecurityUtils.getCurrentUser();
        if (operator == null) {
            return "util/error";
        }else if(opRole != null){
        	Map<String, Object> conditions = new HashMap<String, Object>();
    		List<OPFunction> opFunctionsList = menuManageService.pageListMenu(page, conditions);
    		model.addAttribute("opFunctionsList", opFunctionsList);
    		model.addAttribute("opRole", opRole);
        }
    	return "menuManage/selectMenu";
    }
    
    /**
	 * 创建角色中 选择菜单 分页
	 * 
	 * @return
	 */
	@RequestMapping(value = "/changeMenu")
	public String preserveMenu(
			@ModelAttribute("opRole") OPRole opRole,
    		@ModelAttribute("page") MyBatisPage page,
			Model model) {
		OperatorDetails operator = SpringSecurityUtils.getCurrentUser();
		if (operator == null) {
			return "util/error";
		}else if(opRole != null){
			Map<String, Object> conditions = new HashMap<String, Object>();
    		List<OPFunction> opFunctionsList = menuManageService.pageListMenu(page, conditions);
    		model.addAttribute("opFunctionsList", opFunctionsList);
    		model.addAttribute("opRole", opRole);
    		List<OPRoleFunc> opRoleFunctions = opRole.getOpRoleFuncs();
    		List<OPFunction> opFuns = new ArrayList<OPFunction>();
    		if(opRoleFunctions != null){
    			for(int i = 0 ; i < opRoleFunctions.size() ; i++){
    				OPFunction opF = opRoleFunctions.get(i).getOpFunction();
    				if(opF != null){
    					opFuns.add(opF);
    				}
        		}
    			model.addAttribute("opFuns", opFuns);
    		}
		}
		return "menuManage/selectMenu";
	}
    
	@RequestMapping(value = "/saveOPRoleAndopRoleFunction")
	public String saveOPRoleAndopRoleFunction(
			@ModelAttribute("opRole") OPRole opRole,
			@ModelAttribute("page") MyBatisPage page,
			Model model){
		
		OperatorDetails operator = SpringSecurityUtils.getCurrentUser();
		if (operator == null) {
			return "util/error";
		}
		opRole.setCreateTime(new Date(System.currentTimeMillis()));
		opRole.setCreateLogin(operator.getLoginNo());
		boolean result = false;
		result = opRoleFuncService.saveOPRole(opRole);
		model.addAttribute("returnUrl", "OPRoleManageAction/accessAddOPRole");//跳转至controller
		if (result){
	           return "common/success";
	    } else {
	           return "common/failed";
	    }
	}
    
    /**
	 * 保存角色
	 */
	@RequestMapping(value = "/saveOPRole")
	@ResponseBody
	public Map<String, Object> saveOPRole(@RequestBody Map<String, Object> params,
			HttpServletRequest request) {
		OperatorDetails operator = SpringSecurityUtils.getCurrentUser();
		String retCode = "";
		String retMsg = "";
		String excepStackTrace = "";
		boolean flag = false;
		OPRole opRole = new OPRole();
		try {
			if (operator != null) {
				opRole.setRoleName((String)params.get("roleName"));
				opRole.setCreateLogin(operator.getLoginNo());//创建人的工号
				opRole.setCreateTime(new Date(System.currentTimeMillis()));//创建时间
				opRole.setParentRoleId(Integer.parseInt((String)params.get("parentRoleId")));
				opRole.setStatus((String)params.get("status"));
				String roleDesc = (String)params.get("roleDesc");
				opRole.setRoleDesc(roleDesc==null?"":roleDesc);
				flag = opRoleManageService.saveOPRole(opRole);
			}
		} catch (HallException e) {
			retCode = e.getRetCode();
			retMsg = e.getRetMsg();
			excepStackTrace = e.toString();
		}
		/* 定义出参 */
		Map<String, Object> retContent = new HashMap<String, Object>();
		retContent.put("success", flag);
		//sysLogService.sysLogInfo(clientIp, function_code, retCode, retMsg, operMemo, loginAccept, excepStackTrace);
		return retContent;
	}
	
	/**
	 * 角色修改页面
	 */
	@RequestMapping(value = "/modifyOPRole")
	public String modifyOPRole(
			@RequestParam("roleId") String roleId,
			@ModelAttribute("page") MyBatisPage page,
			Model model
		){
		OperatorDetails operator = SpringSecurityUtils.getCurrentUser();
		if (operator == null) {
			return "util/error";
		}
		Map<String, Object> conditions = new HashMap<String, Object>();
		List<OPFunction> opFunctionsList = menuManageService.pageListMenu(page, conditions);//获得分页的菜单集合
		OPRole opRole = opRoleManageService.findOPRoleByRoleId(roleId);//查找OPRole
		
		List<OPFunction> opFuns = opRole.getOpFunction();
		if(opFuns != null){
			model.addAttribute("opFuns", opFuns);
		}
		model.addAttribute("opRole", opRole);
		model.addAttribute("opFunctionsList", opFunctionsList);
		return "loginManage/modifyRole";
	}
	
	/**
	 * 修改角色 分页查看菜单
	 */
	@RequestMapping(value = "/modifyRoleFromPageList")
	public String modifyRoleFromPageList(
			@ModelAttribute("opRole") OPRole opRole,
    		@ModelAttribute("page") MyBatisPage page,
			Model model) {
		OperatorDetails operator = SpringSecurityUtils.getCurrentUser();
		if (operator == null) {
			return "util/error";
		}else if(opRole != null){
			Map<String, Object> conditions = new HashMap<String, Object>();
    		List<OPFunction> opFunctionsList = menuManageService.pageListMenu(page, conditions);
    		model.addAttribute("opFunctionsList", opFunctionsList);
    		model.addAttribute("opRole", opRole);
    		List<OPRoleFunc> opRoleFunctions = opRole.getOpRoleFuncs();
    		List<OPFunction> opFuns = new ArrayList<OPFunction>();
    		if(opRoleFunctions != null){
    			for(int i = 0 ; i < opRoleFunctions.size() ; i++){
    				OPFunction opF = opRoleFunctions.get(i).getOpFunction();
    				if(opF != null){
    					opFuns.add(opF);
    				}
        		}
    			model.addAttribute("opFuns", opFuns);
    		}
		}
		return "loginManage/modifyRole";
	}
	
	/**
	 * 保存修改的角色信息和其绑定的菜单
	 */
	@RequestMapping(value = "/modifyOPRoleAndOPFunction")
	public String modifyOPRoleAndOPFunction(
			@ModelAttribute("opRole") OPRole opRole,
    		@ModelAttribute("page") MyBatisPage page,
			Model model){
		model.addAttribute("returnUrl", "OPRoleManageAction/opRoleManage");//跳转至controller
		boolean result = false;
		result = opRoleManageService.updateOPRole(opRole);
		if (true){
	           return "common/success";
	    } else {
	           return "common/failed";
	    }
	}
	
}



































